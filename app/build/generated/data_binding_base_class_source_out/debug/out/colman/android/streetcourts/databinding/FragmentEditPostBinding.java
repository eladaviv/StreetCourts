// Generated by view binder compiler. Do not edit!
package colman.android.streetcourts.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import colman.android.streetcourts.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEditPostBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextInputEditText editPostAddressTxt;

  @NonNull
  public final TextInputEditText editPostAreaTxt;

  @NonNull
  public final ImageButton editPostCameraBtn;

  @NonNull
  public final MaterialButton editPostCancelBtn;

  @NonNull
  public final TextInputLayout editPostCategoryDropdown;

  @NonNull
  public final AutoCompleteTextView editPostCategoryTxt;

  @NonNull
  public final Button editPostDeleteBtn;

  @NonNull
  public final TextInputEditText editPostDescriptionTxt;

  @NonNull
  public final ImageButton editPostGalleryBtn;

  @NonNull
  public final ImageView editPostImgv;

  @NonNull
  public final TextInputEditText editPostNameTxt;

  @NonNull
  public final ProgressBar editPostProgressbar;

  @NonNull
  public final MaterialButton editPostSaveBtn;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout2;

  private FragmentEditPostBinding(@NonNull ScrollView rootView,
      @NonNull TextInputEditText editPostAddressTxt, @NonNull TextInputEditText editPostAreaTxt,
      @NonNull ImageButton editPostCameraBtn, @NonNull MaterialButton editPostCancelBtn,
      @NonNull TextInputLayout editPostCategoryDropdown,
      @NonNull AutoCompleteTextView editPostCategoryTxt, @NonNull Button editPostDeleteBtn,
      @NonNull TextInputEditText editPostDescriptionTxt, @NonNull ImageButton editPostGalleryBtn,
      @NonNull ImageView editPostImgv, @NonNull TextInputEditText editPostNameTxt,
      @NonNull ProgressBar editPostProgressbar, @NonNull MaterialButton editPostSaveBtn,
      @NonNull LinearLayout linearLayout, @NonNull LinearLayout linearLayout2) {
    this.rootView = rootView;
    this.editPostAddressTxt = editPostAddressTxt;
    this.editPostAreaTxt = editPostAreaTxt;
    this.editPostCameraBtn = editPostCameraBtn;
    this.editPostCancelBtn = editPostCancelBtn;
    this.editPostCategoryDropdown = editPostCategoryDropdown;
    this.editPostCategoryTxt = editPostCategoryTxt;
    this.editPostDeleteBtn = editPostDeleteBtn;
    this.editPostDescriptionTxt = editPostDescriptionTxt;
    this.editPostGalleryBtn = editPostGalleryBtn;
    this.editPostImgv = editPostImgv;
    this.editPostNameTxt = editPostNameTxt;
    this.editPostProgressbar = editPostProgressbar;
    this.editPostSaveBtn = editPostSaveBtn;
    this.linearLayout = linearLayout;
    this.linearLayout2 = linearLayout2;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEditPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEditPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_edit_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEditPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_post_address_txt;
      TextInputEditText editPostAddressTxt = ViewBindings.findChildViewById(rootView, id);
      if (editPostAddressTxt == null) {
        break missingId;
      }

      id = R.id.edit_post_area_txt;
      TextInputEditText editPostAreaTxt = ViewBindings.findChildViewById(rootView, id);
      if (editPostAreaTxt == null) {
        break missingId;
      }

      id = R.id.edit_post_camera_btn;
      ImageButton editPostCameraBtn = ViewBindings.findChildViewById(rootView, id);
      if (editPostCameraBtn == null) {
        break missingId;
      }

      id = R.id.edit_post_cancel_btn;
      MaterialButton editPostCancelBtn = ViewBindings.findChildViewById(rootView, id);
      if (editPostCancelBtn == null) {
        break missingId;
      }

      id = R.id.edit_post_category_dropdown;
      TextInputLayout editPostCategoryDropdown = ViewBindings.findChildViewById(rootView, id);
      if (editPostCategoryDropdown == null) {
        break missingId;
      }

      id = R.id.edit_post_category_txt;
      AutoCompleteTextView editPostCategoryTxt = ViewBindings.findChildViewById(rootView, id);
      if (editPostCategoryTxt == null) {
        break missingId;
      }

      id = R.id.edit_post_delete_btn;
      Button editPostDeleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (editPostDeleteBtn == null) {
        break missingId;
      }

      id = R.id.edit_post_description_txt;
      TextInputEditText editPostDescriptionTxt = ViewBindings.findChildViewById(rootView, id);
      if (editPostDescriptionTxt == null) {
        break missingId;
      }

      id = R.id.edit_post_gallery_btn;
      ImageButton editPostGalleryBtn = ViewBindings.findChildViewById(rootView, id);
      if (editPostGalleryBtn == null) {
        break missingId;
      }

      id = R.id.edit_post_imgv;
      ImageView editPostImgv = ViewBindings.findChildViewById(rootView, id);
      if (editPostImgv == null) {
        break missingId;
      }

      id = R.id.edit_post_name_txt;
      TextInputEditText editPostNameTxt = ViewBindings.findChildViewById(rootView, id);
      if (editPostNameTxt == null) {
        break missingId;
      }

      id = R.id.edit_post_progressbar;
      ProgressBar editPostProgressbar = ViewBindings.findChildViewById(rootView, id);
      if (editPostProgressbar == null) {
        break missingId;
      }

      id = R.id.edit_post_save_btn;
      MaterialButton editPostSaveBtn = ViewBindings.findChildViewById(rootView, id);
      if (editPostSaveBtn == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      return new FragmentEditPostBinding((ScrollView) rootView, editPostAddressTxt, editPostAreaTxt,
          editPostCameraBtn, editPostCancelBtn, editPostCategoryDropdown, editPostCategoryTxt,
          editPostDeleteBtn, editPostDescriptionTxt, editPostGalleryBtn, editPostImgv,
          editPostNameTxt, editPostProgressbar, editPostSaveBtn, linearLayout, linearLayout2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
