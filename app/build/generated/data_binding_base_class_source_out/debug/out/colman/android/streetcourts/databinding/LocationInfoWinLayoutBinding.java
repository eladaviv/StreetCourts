// Generated by view binder compiler. Do not edit!
package colman.android.streetcourts.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import colman.android.streetcourts.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LocationInfoWinLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button locationBtn;

  @NonNull
  public final ImageView locationImage;

  @NonNull
  public final TextView tvLocationName;

  private LocationInfoWinLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button locationBtn, @NonNull ImageView locationImage,
      @NonNull TextView tvLocationName) {
    this.rootView = rootView;
    this.locationBtn = locationBtn;
    this.locationImage = locationImage;
    this.tvLocationName = tvLocationName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LocationInfoWinLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LocationInfoWinLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.location_info_win_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LocationInfoWinLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.location_btn;
      Button locationBtn = ViewBindings.findChildViewById(rootView, id);
      if (locationBtn == null) {
        break missingId;
      }

      id = R.id.location_image;
      ImageView locationImage = ViewBindings.findChildViewById(rootView, id);
      if (locationImage == null) {
        break missingId;
      }

      id = R.id.tv_location_name;
      TextView tvLocationName = ViewBindings.findChildViewById(rootView, id);
      if (tvLocationName == null) {
        break missingId;
      }

      return new LocationInfoWinLayoutBinding((ConstraintLayout) rootView, locationBtn,
          locationImage, tvLocationName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
