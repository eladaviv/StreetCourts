// Generated by view binder compiler. Do not edit!
package colman.android.streetcourts.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import colman.android.streetcourts.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddCategoryBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton addCategoryCancelBtn;

  @NonNull
  public final TextInputEditText addCategoryNameTxt;

  @NonNull
  public final ProgressBar addCategoryProgressbar;

  @NonNull
  public final MaterialButton addCategorySaveBtn;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout2;

  private FragmentAddCategoryBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton addCategoryCancelBtn, @NonNull TextInputEditText addCategoryNameTxt,
      @NonNull ProgressBar addCategoryProgressbar, @NonNull MaterialButton addCategorySaveBtn,
      @NonNull LinearLayout linearLayout, @NonNull LinearLayout linearLayout2) {
    this.rootView = rootView;
    this.addCategoryCancelBtn = addCategoryCancelBtn;
    this.addCategoryNameTxt = addCategoryNameTxt;
    this.addCategoryProgressbar = addCategoryProgressbar;
    this.addCategorySaveBtn = addCategorySaveBtn;
    this.linearLayout = linearLayout;
    this.linearLayout2 = linearLayout2;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddCategoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddCategoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_category, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddCategoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_category_cancel_btn;
      MaterialButton addCategoryCancelBtn = ViewBindings.findChildViewById(rootView, id);
      if (addCategoryCancelBtn == null) {
        break missingId;
      }

      id = R.id.add_category_name_txt;
      TextInputEditText addCategoryNameTxt = ViewBindings.findChildViewById(rootView, id);
      if (addCategoryNameTxt == null) {
        break missingId;
      }

      id = R.id.add_category_progressbar;
      ProgressBar addCategoryProgressbar = ViewBindings.findChildViewById(rootView, id);
      if (addCategoryProgressbar == null) {
        break missingId;
      }

      id = R.id.add_category_save_btn;
      MaterialButton addCategorySaveBtn = ViewBindings.findChildViewById(rootView, id);
      if (addCategorySaveBtn == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      return new FragmentAddCategoryBinding((ScrollView) rootView, addCategoryCancelBtn,
          addCategoryNameTxt, addCategoryProgressbar, addCategorySaveBtn, linearLayout,
          linearLayout2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
